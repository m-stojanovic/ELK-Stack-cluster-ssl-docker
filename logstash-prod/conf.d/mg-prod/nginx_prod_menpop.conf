input {  
    kafka{
        bootstrap_servers => "kafka-broker-1.devopslearning.rs:9092,kafka-broker-2.devopslearning.rs:9093,kafka-broker-3.devopslearning.rs:9094"
        group_id => "nginx-access-menpop-logs"
        client_id => "nginx-access-menpop-logs"
        max_poll_interval_ms => 600000
        consumer_threads => 3
        topics => ["nginx-access-prod-menpop-logs"]
        type => "access"
        security_protocol => "SSL"
        ssl_key_password => "DevopsPass!"
	ssl_keystore_location => "/etc/logstash/ssl/kafka_ssl/client.keystore.jks"
	ssl_keystore_password => "DevopsPass!"
	ssl_truststore_location => "/etc/logstash/ssl/kafka_ssl/client.truststore.jks"
	ssl_truststore_password => "DevopsPass!"
        ssl_endpoint_identification_algorithm => " "
    }
    kafka{
        bootstrap_servers => "kafka-broker-1.devopslearning.rs:9092,kafka-broker-2.devopslearning.rs:9093,kafka-broker-3.devopslearning.rs:9094"
        group_id => "nginx-error-menpop-logs"
        client_id => "nginx-error-menpop-logs"
        max_poll_interval_ms => 600000
        consumer_threads => 3
        topics => ["nginx-error-prod-menpop-logs"]
        type => "error"
        security_protocol => "SSL"
        ssl_key_password => "DevopsPass!"
        ssl_keystore_location => "/etc/logstash/ssl/kafka_ssl/client.keystore.jks"
        ssl_keystore_password => "DevopsPass!"
        ssl_truststore_location => "/etc/logstash/ssl/kafka_ssl/client.truststore.jks"
        ssl_truststore_password => "DevopsPass!"
        ssl_endpoint_identification_algorithm => " "
    }
}

filter {
    if [type] == "access" {
        grok { 
           match => {"message" => "%{USERNAME:hostname} %{COMBINEDAPACHELOG}"}
        }
        mutate {
           remove_field => ["message", "ident"]
        }
        mutate {
           gsub => [ "agent", "\"", "" ]
           gsub => [ "referrer", "\"", "" ]
        }
        geoip{
             source => "clientip"
        }
    }
    if [type] == "error" {
        mutate {
             gsub => [ "message", "\"", "" ]
        }
        grok {
             patterns_dir => "/etc/logstash/patterns/nginx_prod"
             match => {"message" => "%{NGINX_ERROR}"}
        }
        mutate {
             remove_field => [ "message", "pid" ]
        }

    }
}
output {
    if [type] == "access" {
         elasticsearch {
             hosts => "https://elastic-stack.devopslearning.rs:9200"
             user => "elastic"
             password => "DevopsPass!"
             ssl => true
             ssl_certificate_verification => true
             cacert => "/etc/ssl/certs/ca-certificates.crt"
             index => "logstash-nginx-prod-menpop-access-logs-%{+YYYY.MM.dd}"
         }
    } 
    if [type] == "error" {
         elasticsearch {
             hosts => "https://elastic-stack.devopslearning.rs:9200"
             user => "elastic"
             password => "DevopsPass!"
             ssl => true
             ssl_certificate_verification => true
             cacert => "/etc/ssl/certs/ca-certificates.crt"
             index => "logstash-nginx-prod-menpop-error-logs-%{+YYYY.MM.dd}"
         }
    }
}
