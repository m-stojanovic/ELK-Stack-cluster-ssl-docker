input {
    kafka{
        bootstrap_servers => "kafka-broker-1.devopslearning.xyz:9092,kafka-broker-2.devopslearning.xyz:9093,kafka-broker-3.devopslearning.xyz:9094"
        group_id => "jenkins"
        client_id => "jenkins1"
        consumer_threads => 3
        topics => ["jenkins-master-logs"]
        security_protocol => "SSL"
        ssl_key_password => "{{ kafka_ssl_password }}"
        ssl_keystore_location => "/etc/logstash/ssl/kafka_ssl/client.keystore.jks"
        ssl_keystore_password => "{{ kafka_ssl_password }}"
        ssl_truststore_location => "/etc/logstash/ssl/kafka_ssl/client.truststore.jks"
        ssl_truststore_password => "{{ kafka_ssl_password }}"
        ssl_endpoint_identification_algorithm => " "
    }
}
filter {
     mutate {
	  gsub=>["message","\t"," "]
     } 
     grok {
        match=>{ "message" => "%{SYSLOGHOST:hostname}%{SPACE}%{TIMESTAMP_ISO8601:timestamp}%{SPACE}(?<id>\[id=\d*\])%{SPACE}(?<severity>\w*)(?<event_type>[^:]*)(?<event>[^~]*)" }
     }
     mutate {
	gsub => [ "event", "^:", "",
	"id", "\[id=", "",
	"id", "\]", ""
	]
        strip => [ "event_type", "event" ]
	remove_field => [ "message" ]
     }
}
output {
      elasticsearch {
          hosts => "https://devopslearning.xyz:9200"
          user => "elastic"
          password => "{{ elk_password }}"
          index => "jenkins-master-logs"
          ssl => true
          ssl_certificate_verification => true
          cacert => "/etc/ssl/certs/ca-certificates.crt"
      }
}


